let pokemonRepository = function () { let e = []; function t() { return e } function n(t) { "object" == typeof t && "name" in t && "detailsUrl" in t ? e.push(t) : alert("Please select a Pok\xe9mon.") } function i(e) { a(e).then(function () { var t; let n, i, a, o, l, r, s, p; t = e, n = document.querySelector(".modal-title"), i = document.querySelector(".modal-body"), a = document.createElement("h1"), a.innerText = "Name: " + t.name[0].toUpperCase() + t.name.slice(1), o = document.createElement("p"), o.innerText = "Height: " + t.height, l = document.createElement("p"), l.innerText = "Types: " + t.types.map(e => e.type.name), r = document.createElement("p"), r.innerText = "Abilities: " + t.abilities.join(", "), s = document.createElement("p"), s.innerText = "Base Experience: " + t.baseExperience, p = document.createElement("img"), p.src = t.imageUrl, n.append(a), i.append(o), i.append(l), i.append(r), i.append(s), i.append(p), $(".modal").on("hidden.bs.modal", function () { $(".modal-body").html("") && $(".modal-title").html("") }) }) } function a(e) { return fetch(e.detailsUrl).then(function (e) { return e.json() }).then(function (t) { e.imageUrl = t.sprites.front_default, e.height = t.height, e.types = t.types, e.abilities = t.abilities.map(e => e.ability.name), e.baseExperience = t.base_experience }).catch(function (e) { console.error(e) }) } return { getAll: t, add: n, addListItem: function e(t) { let n = document.querySelector(".list-group"), a = document.createElement("li"); a.classList.add("list-group-item"); let o = document.createElement("button"); o.innerText = t.name, o.classList.add("btn-secondary"), o.setAttribute("data-toggle", "modal"), o.setAttribute("data-target", "#modalContainer"), a.appendChild(o), n.appendChild(a), o.addEventListener("click", function () { i(t) }) }, loadList: function e() { return fetch("https://pokeapi.co/api/v2/pokemon/?limit=150").then(function (e) { return e.json() }).then(function (e) { e.results.forEach(function (e) { let t = { name: e.name[0].toUpperCase() + e.name.slice(1), detailsUrl: e.url }; n(t), console.log(t) }) }).catch(function (e) { console.error(e) }) }, loadDetails: a, showDetails: i, searchFunction: function e() { var t, n, i, a, o, l, r; if (n = (t = document.getElementById("search-bar")).value.toUpperCase(), a = (i = document.querySelector(".list-group")).getElementsByTagName("li"), 0 === t.value.length) for (l = 0; l < a.length; l++)a[l].style.display = "block"; for (l = 0; l < a.length; l++)(r = (o = a[l].getElementsByTagName("button")[0]).textContent || o.innerText).toUpperCase().indexOf(n) > -1 ? a[l].style.display = "" : a[l].style.display = "none" } } }(); pokemonRepository.loadList().then(function () { pokemonRepository.getAll().forEach(function (e) { pokemonRepository.addListItem(e) }) });